{"ast":null,"code":"var _jsxFileName = \"/Users/rollinskevin/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from \"react\";\nimport ReactiveButton from \"reactive-button\";\nimport '../SortingVisualizer/SortingVisualizer.css'; // Change this value for the number of bars (value) in the array.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_ARRAY_BARS = 210; // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'NAVY-BLUE';\n\nfunction App() {}\n\n_c = App;\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  quickSort() {// We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  heapSort() {// We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  bubbleSort() {// We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: [array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          backgroundColor: PRIMARY_COLOR,\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        onClick: () => this.resetArray(),\n        color: \"teal\",\n        size: \"medium\",\n        idleText: 'Generate Array',\n        loadingText: 'Loading',\n        rounded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        onClick: () => this.mergeSort(),\n        color: \"Red\",\n        size: \"medium\",\n        idleText: 'Merge Sort',\n        loadingText: 'Loading',\n        rounded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        onClick: () => this.quickSort(),\n        color: \"blue\",\n        size: \"medium\",\n        idleText: 'Quick Sort',\n        loadingText: 'Loading',\n        rounded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        onClick: () => this.heapSort(),\n        color: \"violet\",\n        size: \"medium\",\n        idleText: 'Heap Sort',\n        loadingText: 'Loading',\n        rounded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        onClick: () => this.bubbleSort(),\n        color: \"green\",\n        size: \"medium\",\n        idleText: 'Bubble Sort',\n        loadingText: 'Loading',\n        rounded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.testSortingAlgorithms(),\n        children: \"Test Sorting Algorithms (BROKEN)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactiveButton","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","App","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","quickSort","heapSort","bubbleSort","render","map","value","idx","backgroundColor","height","mergeSort","testSortingAlgorithms","min","max","Math","floor","random"],"sources":["/Users/rollinskevin/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactiveButton from \"reactive-button\";\nimport '../SortingVisualizer/SortingVisualizer.css';\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 210;\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'NAVY-BLUE';\n\nfunction App() {\n    \n}\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n  \n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n    this.setState({array});\n  }\n\n  quickSort() {\n    // We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  heapSort() {\n    // We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  bubbleSort() {\n    // We leave it as an exercise to the viewer of this code to implement this method.\n  }\n\n  render() {\n    const {array} = this.state;\n\n\n    return (\n      <div className=\"array-container\">\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{\n              backgroundColor: PRIMARY_COLOR,\n              height: `${value}px`,\n            }}></div>\n        ))}\n\n        <ReactiveButton onClick={() => this.resetArray()}\n        color='teal'\n        size='medium'\n        idleText={'Generate Array'}\n        loadingText={'Loading'}\n        rounded\n        />\n        \n        <ReactiveButton onClick={() => this.mergeSort()}\n        color='Red'\n        size='medium'\n        idleText={'Merge Sort'}\n        loadingText={'Loading'}\n        rounded\n        />\n        <ReactiveButton onClick={() => this.quickSort()}\n        color='blue'\n        size='medium'\n        idleText={'Quick Sort'}\n        loadingText={'Loading'}\n        rounded\n        />\n        <ReactiveButton onClick={() => this.heapSort()}\n        color='violet'\n        size='medium'\n        idleText={'Heap Sort'}\n        loadingText={'Loading'}\n        rounded\n        />\n        <ReactiveButton onClick={() => this.bubbleSort()}\n        color='green'\n        size='medium'\n        idleText={'Bubble Sort'}\n        loadingText={'Loading'}\n        rounded\n        />\n\n        <button onClick={() => this.testSortingAlgorithms()}>\n          Test Sorting Algorithms (BROKEN)\n        </button>\n      </div>\n    );\n  }\n}\n\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}